// DAZ Studio version 4.16.0.3 filetype DAZ Script

function Run_TestCase_07(sTestAsset)
{
    var sExportFilename = "";
    var sAssetType = "SkeletalMesh";
    var sRootFolder = DzDir("").homePath() + "/Documents/DazToUnity";
    var sExportFolder = "TC07";
    var sProductName = "";
    var sComponentName = "";
    var arrayMorphList = [];
	pathToDUFolder = "/documents/daztounity/" + sExportFolder.lower();
	var SubdivisionTestLevel = 3;

    print("Running Test Case 7:");

    // start with clean Daz Studio scene (TC7.1)
    Scene.clear();
    var oContentMgr = App.getContentMgr();

    // load Genesis 8.1 Basic Female (TC7.5)
    var sFullPath = oContentMgr.findFile(sTestAsset);
    oContentMgr.openFile(sFullPath);

    // Create DzBridgeUnityAction and DzUnityDialog
    var oBridge = new DzBridgeUnityAction();
	if (oBridge == undefined)
	{
		print ("ERROR: could not instantiate DzBridgeUnityAction object.");
		return false;
	}    
    
    var wBridgeDialog = new DzBridgeUnityDialog();
//    var wBridgeDialog = oBridge.getBridgeDialog();
	if (wBridgeDialog == undefined)
	{
		print ("ERROR: could not instantiate DzBridgeUnityDialog object.");
		return false;
	}
	var wSubdivDialog = new DzBridgeSubdivisionDialog(wBridgeDialog);
//	var wSubdivDialog = oBridge.getSubdivisionDialog();
	if (wSubdivDialog == undefined)
	{
		print ("ERROR: could not instantiate DzBridgeSubdivisionDialog object.");
		return false;
	}    

	//oBridge.setBridgeDialog(wBridgeDialog);
	oBridge.setSubdivisionDialog(wSubdivDialog);

    wBridgeDialog.wSubdivisionEnabledCheckBox.setChecked(true);

    // Set Subdivision Level 2 (TC7.8)
    var nodeSelection = Scene.getPrimarySelection();
 
    if (wSubdivDialog != undefined)
    {
	    wSubdivDialog.setSubdivisionLevelByNode(nodeSelection, SubdivisionTestLevel);
	}

    // Send to Unity (TC7.10)
    var sReturnString = Run_Exporter2(oBridge, sExportFilename, sAssetType, sRootFolder, sExportFolder, sProductName, sComponentName, arrayMorphList);
    var sDtuFilename = sReturnString;

    // check for expected root folder, export folder and export filename
    if (sDtuFilename.lower().find(pathToDUFolder + "/genesis81female.dtu") == -1)
    {
        print ("Test Case 7 FAILED: Incorrect output DTU filename");
        return false;
    }

    print("Exported DTU = " + sDtuFilename);
    if (Validate_DTU_file(sDtuFilename) == false)
    {
        return false;
    }
    var oDTU = Load_DTU_file(sDtuFilename);
    print("DTU Subdivision Settings: " + oDTU.Subdivisions[0]["Asset Name"] + ": Subdivision Level=" + oDTU.Subdivisions[0]["Value"]);
	if (oDTU.Subdivisions[0]["Value"] != SubdivisionTestLevel)
	{
		print("Test Case 7 FAILED: Incorrect Subdivision Level set in DTU.");
		return false;
	}

    var sFbxFilename = sDtuFilename;
    sFbxFilename = sFbxFilename.replace(".dtu",".fbx");
    // Check for Fbx HD
    var sFbxFilenameHD = sFbxFilename;
    print("Exported FBX HD = " + sFbxFilenameHD);
    if (Validate_FBX_file(sFbxFilenameHD) == false)
    {
        return false;
    }
    // Check for Fbx_base
    var sFbxFilenameHD = sFbxFilename;
    sFbxFilenameHD = sFbxFilenameHD.replace(".fbx","_base.fbx");
    print("Exported FBX base = " + sFbxFilenameHD);
    if (Validate_FBX_file(sFbxFilenameHD) == false)
    {
        return false;
    }

	// check for normal maps
/*	var arrNormalMapList = ["G8_1FBaseBodyMapB_1003_nm.png", "G8_1FBaseFaceMapB_1001_nm.png",
                "G8_1FBaseHeadMapB_1002_nm.png", "G8FBaseArmsMapB_1004_nm.png", "G8FBaseLegsMapB_1003_nm.png"];
	var sDTUpath = DzFileInfo(sDtuFilename).path();
	if (Validate_NormalMaps(arrNormalMapList, sDTUpath) == false)
	{
		return false;
	}*/

    return true;
}

//Run_TestCase_07("/people/genesis 8 female/genesis 8.1 basic female.duf");
