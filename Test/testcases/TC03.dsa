// DAZ Studio version 4.16.0.3 filetype DAZ Script

function Run_TestCase_03(sTestAsset)
{
    sExportFilename = "";
    sAssetType = "SkeletalMesh";
    sRootFolder = "";
    sExportFolder = "TC03";
    sProductName = "";
    sComponentName = "";
    arrayMorphList = [];

    print("Running Test Case 3:");

    // start with clean Daz Studio scene (TC3.1)
    Scene.clear();
    var oContentMgr = App.getContentMgr();

    // load Genesis 8.1 Basic Female (TC3.5)
    var sFullPath = oContentMgr.findFile(sTestAsset);
    oContentMgr.openFile(sFullPath);

    // Rename the node to "CustomSceneLabel" (TC3.7)
    var oNode = Scene.getPrimarySelection();
    var sLabel = oNode.getLabel();
    if (sLabel != "Genesis 8.1 Female")
    {
        print ("Test case 3 FAILED: Unable to set up test conditions: sLabel = " + sLabel);
    }
    //print(sLabel)
    sLabel = "CustomSceneLabel";
    oNode.setLabel(sLabel);

    // Send to Unreal with default settings (TC3.8)
    var sReturnString = Run_Exporter(sExportFilename, sAssetType, sRootFolder, sExportFolder, sProductName, sComponentName, arrayMorphList);
    var sDtuFilename = sReturnString;

    // check for expected root folder, export folder and export filename (TC3.12)
    if (sDtuFilename.lower().find("/documents/daztounreal/tc03/customscenelabel.dtu") == -1)
    {
        print ("Test Case 3 FAILED: Incorrect output DTU filename");
        return false;
    }

    print("Exported DTU = " + sDtuFilename);
    if (Validate_DTU_file(sDtuFilename) == false)
    {
        return false;
    }

    var sFbxFilename = sDtuFilename;
    sFbxFilename = sFbxFilename.replace(".dtu",".fbx");
    print("Exported DTU = " + sFbxFilename);

    if (Validate_FBX_file(sFbxFilename) == false)
    {
        return false;
    }
	//check for normal maps
	var arrNormalMapList = ["G8_1FBaseBodyMapB_1003_nm.png", "G8_1FBaseFaceMapB_1001_nm.png",
              "G8_1FBaseHeadMapB_1002_nm.png", "G8FBaseArmsMapB_1004_nm.png", "G8FBaseLegsMapB_1003_nm.png"]
	var sDTUpath = DzFileInfo(sDtuFilename).path()
	if (Validate_NormalMaps(arrNormalMapList, sDTUpath) == false)
	{
		return false;
	}

    return true;
}
